function kbash() {
    kubectl get pod curl > /dev/null 2>&1

    if [ $? -ne 0 ]; then
        # Not running, create a new one
        kubectl run curl --image=pj3677/curlimage -i --tty
    else
		echo 'Attaching...'
		podname=$(kubectl get pods --selector=run=curl -o jsonpath='{.items[*].metadata.name}')
        kubectl attach ${podname} -c curl -i -t
    fi
}

function kdash() {
    kubectl proxy &
    open http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/
}

function kproxy() {
    kubectl proxy &
    open http://localhost:8001/api/v1/namespaces/default/services/http:$1:$2/proxy/

}

function podip {
    echo "Getting IP for '$1'"
    kubectl describe pod $1 | grep IP | awk '{print $2}'
}

# Attach to running pod
function ka() {
    kubectl attach $1 -i
}

# Forwards local port to pods container port
function kf() {
    if [ -z "$1" ]; then
        kubectl get pods -o name
    else
        containerPort=$(kubectl get po $1 -o jsonpath='{.spec.containers[0].ports[0].containerPort}')
        if [ -z "$containerPort" ]; then
            echo "No container port"
        else
            kubectl port-forward $1 8080:$containerPort
        fi
    fi
}

# Deploys metallb to the current cluster
function metallb() {
    # make sure to install  `brew install chipmk/tap/docker-mac-net-connect`
    helm upgrade --install --namespace metallb-system --create-namespace --repo https://metallb.github.io/metallb metallb metallb
    kubectl wait po -n metallb-system --timeout=600s -l app.kubernetes.io/name=metallb -l app.kubernetes.io/component=controller --for condition=Ready

    KIND_NET_CIDR=$(docker network inspect kind -f '{{(index .IPAM.Config 0).Subnet}}')
    METALLB_IP_START=$(echo ${KIND_NET_CIDR} | sed "s@0.0/16@255.200@")
    METALLB_IP_END=$(echo ${KIND_NET_CIDR} | sed "s@0.0/16@255.250@")
    METALLB_IP_RANGE="${METALLB_IP_START}-${METALLB_IP_END}"
kubectl apply -f - <<EOF
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: lbpool
  namespace: metallb-system
spec:
  addresses:
  - ${METALLB_IP_RANGE}
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: l2adv
  namespace: metallb-system
EOF
}