function kbash() {
    kubectl get pod curl > /dev/null 2>&1

    if [ $? -ne 0 ]; then
        # Not running, create a new one
        kubectl run curl --image=curlimages/curl -i --tty
    else
		echo 'Attaching...'
		podname=$(kubectl get pods --selector=run=curl -o jsonpath='{.items[*].metadata.name}')
        kubectl attach ${podname} -c curl -i -t
    fi
}

function kdash() {
    kubectl proxy &
    open http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/
}

function kproxy() {
    kubectl proxy &
    open http://localhost:8001/api/v1/namespaces/default/services/http:$1:$2/proxy/

}

function podip {
    echo "Getting IP for '$1'"
    kubectl describe pod $1 | grep IP | awk '{print $2}'
}

# Attach to running pod
function ka() {
    kubectl attach $1 -i
}

# Forwards local port to pods container port
function kf() {
    if [ -z "$1" ]; then
        kubectl get pods -o name
    else
        containerPort=$(kubectl get po $1 -o jsonpath='{.spec.containers[0].ports[0].containerPort}')
        if [ -z "$containerPort" ]; then
            echo "No container port"
        else
            kubectl port-forward $1 8080:$containerPort
        fi
    fi
}